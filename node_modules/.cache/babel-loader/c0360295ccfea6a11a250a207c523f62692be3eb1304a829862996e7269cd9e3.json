{"ast":null,"code":"var _jsxFileName = \"/Users/ichy/Desktop/Ichrak-s-Blog copy/src/pages/home/Home1.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport img from \"../../components/img/Screen Shot 2023-06-14 at 11.45 2.png\";\nimport img2 from \"../../components/img/We all need a little help sometimes.png\";\nimport { Link } from \"react-router-dom\";\nimport { Map, GoogleApiWrapper } from 'google-maps-react';\nimport PlacesAutocomplete from \"react-google-autocomplete\";\nimport \"./home.css\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mapStyles = {\n  width: \"100%\",\n  height: \"400px\"\n};\nexport function Home1(_ref) {\n  _s();\n  let {\n    google\n  } = _ref;\n  const [searchText, setSearchText] = useState(\"\");\n  const handleSearch = () => {\n    // Implement your search functionality here based on the value of searchText\n    // For example, you can call a search API or perform geocoding to get the latitude and longitude of the entered address.\n    console.log(\"Search Address:\", searchText);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"topleft\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"img2\",\n          src: img2,\n          alt: \"Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"img\",\n          src: img,\n          alt: \"Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-box\",\n        children: [/*#__PURE__*/_jsxDEV(PlacesAutocomplete, {\n          apiKey: \"YOUR_GOOGLE_MAPS_API_KEY\",\n          onSelect: place => {\n            setSearchText(place.formatted_address);\n          },\n          types: ['address'],\n          placeholder: \"Enter an address\",\n          className: \"search-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSearch,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Map, {\n        google: google,\n        zoom: 14,\n        style: mapStyles,\n        initialCenter: {\n          lat: 37.7749,\n          lng: -122.4194\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Home1, \"OAGvOw28fBJQW7HtXCjc9nvla2M=\");\n_c = Home1;\nexport default GoogleApiWrapper({\n  apiKey: \"YOUR_GOOGLE_MAPS_API_KEY\"\n})(Home1);\nvar _c;\n$RefreshReg$(_c, \"Home1\");","map":{"version":3,"names":["React","useState","img","img2","Link","Map","GoogleApiWrapper","PlacesAutocomplete","mapStyles","width","height","Home1","google","searchText","setSearchText","handleSearch","console","log","place","formatted_address","lat","lng","apiKey"],"sources":["/Users/ichy/Desktop/Ichrak-s-Blog copy/src/pages/home/Home1.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport img from \"../../components/img/Screen Shot 2023-06-14 at 11.45 2.png\";\nimport img2 from \"../../components/img/We all need a little help sometimes.png\";\nimport { Link } from \"react-router-dom\";\nimport { Map, GoogleApiWrapper } from 'google-maps-react';\nimport PlacesAutocomplete from \"react-google-autocomplete\";\nimport \"./home.css\";\n\nconst mapStyles = {\n  width: \"100%\",\n  height: \"400px\",\n};\n\nexport function Home1({ google }) {\n  const [searchText, setSearchText] = useState(\"\");\n\n  const handleSearch = () => {\n    // Implement your search functionality here based on the value of searchText\n    // For example, you can call a search API or perform geocoding to get the latitude and longitude of the entered address.\n    console.log(\"Search Address:\", searchText);\n  };\n\n  return (\n    <>\n      <div className=\"topleft\">\n        <Link to=\"/\">\n          <img className=\"img2\" src={img2} alt=\"Image\" />\n        </Link>\n        <Link to=\"/\">\n          <img className=\"img\" src={img} alt=\"Image\" />\n        </Link>\n      </div>\n      <div className=\"home\">\n        <div className=\"search-box\">\n          <PlacesAutocomplete\n            apiKey=\"YOUR_GOOGLE_MAPS_API_KEY\"\n            onSelect={(place) => {\n              setSearchText(place.formatted_address);\n            }}\n            types={['address']}\n            placeholder=\"Enter an address\"\n            className=\"search-input\"\n          />\n          <button onClick={handleSearch}>Search</button>\n        </div>\n        <Map\n          google={google}\n          zoom={14}\n          style={mapStyles}\n          initialCenter={{\n            lat: 37.7749,\n            lng: -122.4194\n          }}\n        />\n      </div>\n    </>\n  );\n}\n\nexport default GoogleApiWrapper({\n  apiKey: \"YOUR_GOOGLE_MAPS_API_KEY\"\n})(Home1);\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,GAAG,MAAM,4DAA4D;AAC5E,OAAOC,IAAI,MAAM,8DAA8D;AAC/E,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,GAAG,EAAEC,gBAAgB,QAAQ,mBAAmB;AACzD,OAAOC,kBAAkB,MAAM,2BAA2B;AAC1D,OAAO,YAAY;AAAC;AAAA;AAEpB,MAAMC,SAAS,GAAG;EAChBC,KAAK,EAAE,MAAM;EACbC,MAAM,EAAE;AACV,CAAC;AAED,OAAO,SAASC,KAAK,OAAa;EAAA;EAAA,IAAZ;IAAEC;EAAO,CAAC;EAC9B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMc,YAAY,GAAG,MAAM;IACzB;IACA;IACAC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEJ,UAAU,CAAC;EAC5C,CAAC;EAED,oBACE;IAAA,wBACE;MAAK,SAAS,EAAC,SAAS;MAAA,wBACtB,QAAC,IAAI;QAAC,EAAE,EAAC,GAAG;QAAA,uBACV;UAAK,SAAS,EAAC,MAAM;UAAC,GAAG,EAAEV,IAAK;UAAC,GAAG,EAAC;QAAO;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QAC1C,eACP,QAAC,IAAI;QAAC,EAAE,EAAC,GAAG;QAAA,uBACV;UAAK,SAAS,EAAC,KAAK;UAAC,GAAG,EAAED,GAAI;UAAC,GAAG,EAAC;QAAO;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QACxC;IAAA;MAAA;MAAA;MAAA;IAAA,QACH,eACN;MAAK,SAAS,EAAC,MAAM;MAAA,wBACnB;QAAK,SAAS,EAAC,YAAY;QAAA,wBACzB,QAAC,kBAAkB;UACjB,MAAM,EAAC,0BAA0B;UACjC,QAAQ,EAAGgB,KAAK,IAAK;YACnBJ,aAAa,CAACI,KAAK,CAACC,iBAAiB,CAAC;UACxC,CAAE;UACF,KAAK,EAAE,CAAC,SAAS,CAAE;UACnB,WAAW,EAAC,kBAAkB;UAC9B,SAAS,EAAC;QAAc;UAAA;UAAA;UAAA;QAAA,QACxB,eACF;UAAQ,OAAO,EAAEJ,YAAa;UAAA,UAAC;QAAM;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA,QAC1C,eACN,QAAC,GAAG;QACF,MAAM,EAAEH,MAAO;QACf,IAAI,EAAE,EAAG;QACT,KAAK,EAAEJ,SAAU;QACjB,aAAa,EAAE;UACbY,GAAG,EAAE,OAAO;UACZC,GAAG,EAAE,CAAC;QACR;MAAE;QAAA;QAAA;QAAA;MAAA,QACF;IAAA;MAAA;MAAA;MAAA;IAAA,QACE;EAAA,gBACL;AAEP;AAAC,GA5CeV,KAAK;AAAA,KAALA,KAAK;AA8CrB,eAAeL,gBAAgB,CAAC;EAC9BgB,MAAM,EAAE;AACV,CAAC,CAAC,CAACX,KAAK,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}